apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka1
  namespace: kafka-test
spec:
  serviceName: kaf1
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      name: kaf1
  template:
    metadata:
      labels:
        app: kaf1
        name: kaf1
    spec:
      nodeSelector:
        kafka_node: "1"
      containers:
      - name: kafka1
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: 192.168.56.102
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: data
          mountPath: /kafka
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: kafka-local
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka2
  namespace: kafka-test
spec:
  serviceName: kaf2
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: kafka2
  template:
    metadata:
      labels:
        app: kafka2
    spec:
      nodeSelector:
        kafka_node: "1"
      containers:
      - name: kafka2
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ADVERTISED_PORT
          value: "9093"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: 192.168.56.102
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: data
          mountPath: /kafka
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: kafka-local
      resources:
        requests:
          storage: 1Gi
---
